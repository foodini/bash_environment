Maybe the correct solution is to quit using PS1 for the status line. I could
just use the timer manager. Whenever a prompt is generated, PROMPT_BNW could be
pushed out to the LOGFILE (which should be renamed). The first line could be
the prompt and the second could be the currently-running command. The manager
would either print the elapsing time (if a second time were present) or the
previous elapsed time (if only one line is present because a prompt has been
generated and the debug trap hasn't fired.)

HIGH priority
* rewrite color_swatch to do layout dynamically. I'd like to have it show all
  valid combinations for a particular terminal.
* fxgrep really needs to take a root directory. (It currently starts at .)
* When you're using a terminal that supports the status line, stop refreshing
  the status line in prompt_command. Right now, all its doing is deleting the
  elapsed time.
* It would be nice if the elapsed time were somehow still available after the
  command completed:
  * You could just update the status line, removing the commandline, but I like
    the fact that the time's presence indicates that it is still running. You
    could put an elapsING time in parenthesis and an elapsED time bare?
  * Print the elapsed time to the terminal (if it exceeds some threshhold?)
    UGLY!
  * Nasty solution: have the timer process update a file that is read during
    prompt generation. 

MEDIUM priority
* Make history completion cd-aware, completing to any directory that you've
  ever been _in_ relative to "$PWD/[argument token]"

LOW priority
* Get the shared code in comify and a in one place.
* Should wclive be able to live-track multiple files?

Completion
* Break completion out into its own repository.
* What about adding support for the directories you've visited... Could be done
  by having the prompt_command stash it somewhere.
* Insert a space at the end of successful completions.
* Columnize output.
* Three columns for expand_scm: file, changelist#, action.
* make the "option : description" printing order configurable so changelist
  id can come before filespec.
* I would really like to be able to match on the name of the file, so /a/b/cd
  should be matchable with c[Alt-O]
  * What do I do if I have:
    apphosting/...../app_id
    apphosting/...../app_id
    ...and someone has entered app[Alt-O]?
* There needs to be a commandline option to prevent prompting.  Sometimes, I
  want old-fashioned disambiguation.
* Color changelist IDs so they're easier to visually group?
