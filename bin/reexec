#!/usr/local/bin/bash

#TODO:
# * Add ability to separately specify file(s) to watch from command to exe.
# * format time to HH:MM:SS

CPID=""
# Single quotes around the command so interpolation of CPID is done at sig time.
trap 'echo shutting down $CPID; kill -9 $CPID &>> /dev/null; exit 0' SIGINT

function restart_child() {
  # If you slap parentheses around $@ &, you can silence job control msgs, but
  # you lose the ability to extract $!
  $@ &
  CPID=$!
  echo "new pid: $CPID"
  let COUNT=0
}

function dead {
  kill -0 $CPID &>> /dev/null
  RETVAL=$?

  # REMEMBER that a non-zero return value, in bash, means FAILURE!!!
  if [[ "$RETVAL" == "0" ]]
  then
    return 1
  else
    return 0
  fi
  return $RETVAL
}

function print_time() {
  let seconds="$1%60"
  let minutes="($1/60)%60"
  let hours="$1/3600"
  printf "\b\b\b\b\b\b\b\b%d:%02d:%02d" $hours $minutes $seconds
}

LAST_MOD_TIME=`date -r $1`
restart_child $@

while [[ true ]]
do
  sleep 1
  CUR_MOD_TIME=`date -r $1`
  if [[ "$LAST_MOD_TIME" == "$CUR_MOD_TIME" ]]
  then
    # Remember that in bash 0 is SUCCESSFUL and 1 is FAILURE
    if dead
    then
      let COUNT="$COUNT+1"
      print_time COUNT
    fi
  else
    echo
    LAST_MOD_TIME=$CUR_MOD_TIME
    kill -9 $CPID &>> /dev/null
    restart_child $@
  fi
done
